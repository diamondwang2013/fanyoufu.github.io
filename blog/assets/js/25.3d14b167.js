(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{202:function(t,a,e){"use strict";e.r(a);var s=e(6),n=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue-代码规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-代码规范","aria-hidden":"true"}},[t._v("#")]),t._v(" vue 代码规范")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://cn.vuejs.org/v2/style-guide/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方推荐"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("要有自己的一套科学的，固定的代码风格。可以从官方推荐的风格的基础上再次编辑。")]),t._v(" "),e("h2",{attrs:{id:"组件命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件命名","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件命名")]),t._v(" "),e("h3",{attrs:{id:"基本要求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本要求","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本要求")]),t._v(" "),e("ul",[e("li",[t._v("单文件名使用大驼峰命名法。如：ItemList.vue")]),t._v(" "),e("li",[t._v("单文件名与组件名保持一致。")]),t._v(" "),e("li",[t._v("组件名中的单词尽量完整。ItemList.vue 要比 ItList.vue 好")])]),t._v(" "),e("h2",{attrs:{id:"父子组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#父子组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 父子组件")]),t._v(" "),e("ul",[e("li",[t._v("如果一个组件只在某个父组件的场景下有意义，这层关系应该体现在其名字上：子组件名字中带上父组件的信息。\n如:\n"),e("ul",[e("li",[t._v("Item.vue （父组件）")]),t._v(" "),e("li",[t._v("ItemButton.vue （子组件）")]),t._v(" "),e("li",[t._v("ItemInput.vue （子组件）")])])])]),t._v(" "),e("h2",{attrs:{id:"公共组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#公共组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 公共组件")]),t._v(" "),e("ul",[e("li",[t._v("公共组件加 Common 前缀。如：CommonButton.vue")])]),t._v(" "),e("h3",{attrs:{id:"单文件组件中顶级元素的顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单文件组件中顶级元素的顺序","aria-hidden":"true"}},[t._v("#")]),t._v(" 单文件组件中顶级元素的顺序")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<template>/* ... */</template>\n<script>/* ... */<\/script>\n<style>/* ... */</style>\n")])])]),e("h3",{attrs:{id:"组件中-options-的顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件中-options-的顺序","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件中 options 的顺序")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("export default MyComponent{\n    // 1. 输入参数\n    props:{},\n    components:{},\n\n    // 2. 本地信息\n    data:{},\n    computed:{},\n\n    // 3. 方法\n    methods:{},\n\n    // 4. 事件\n    created(){},\n    mounted(){},\n    watch:{},\n}\n")])])]),e("h3",{attrs:{id:"data-数据项-的命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-数据项-的命名","aria-hidden":"true"}},[t._v("#")]),t._v(" data 数据项 的命名")]),t._v(" "),e("p",[t._v("正常命名")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("data(){\n\treturn {\n\t\tdataTable: []\n\t}\n}\n")])])]),e("p",[t._v("注意：\n减少放在data中的数据项。一放其中，就会增加监听开销。如果数据只是从接口中取出，并显示，而没有修改，编辑之类的操作，则可以使用Object.freeze()。")]),t._v(" "),e("h3",{attrs:{id:"普通成员变量的命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#普通成员变量的命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 普通成员变量的命令")]),t._v(" "),e("p",[t._v("为了在多个方法中“共享数据”，在名称的前面加_ .")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('created(){\n\tthis._tableName = "niaho"\n}\n')])])]),e("h3",{attrs:{id:"props-的命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props-的命名","aria-hidden":"true"}},[t._v("#")]),t._v(" props 的命名")]),t._v(" "),e("p",[t._v("加前缀 p。这样可以与 data()中的数据项区别开。\n例如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('props:{\n    pTitleName:{type:String,default:""}\n}\n')])])]),e("h3",{attrs:{id:"computed-的命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#computed-的命名","aria-hidden":"true"}},[t._v("#")]),t._v(" computed 的命名")]),t._v(" "),e("p",[t._v("加前缀 c。这样可以与 data()中的数据项区别开。\n例如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('computed:{\n    cTitle(){\n        return this.title + "[" + this.pTitleName +"]"\n    }\n}\n')])])]),e("h3",{attrs:{id:"私有数据的命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#私有数据的命名","aria-hidden":"true"}},[t._v("#")]),t._v(" 私有数据的命名")]),t._v(" "),e("p",[t._v("在 components 的内部，希望数据在不同的方法中共用。例如")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("methods:{\n    m1(){\n        this.titleName = 'a'\n    },\n    m2(){\n        this.titleName = 'b'\n    }\n},\n")])])]),e("p",[t._v("如果你看到上面的代码，你认为 titleName 是如如何挂载在 this 对象上的呢？ 有两个方法：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("data(){return {titleName: ''}}\n")])])]),e("p",[t._v("这是一个典型的做法，也是数据驱动视图的核心所在：当 titleName 发生变化时，视图会刷新。")]),t._v(" "),e("p",[t._v("还有一种写法：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("created(){\n    this.titleName = ''\n}\n")])])]),e("p",[t._v("此时 titleName 就只是一个 \b\b 普通的成员属性：但它的值发生变化时，视图会更新。如果是这种情况，把它的名字前加_.")]),t._v(" "),e("p",[t._v("这样我们有三个与 title 相关的数据了：")]),t._v(" "),e("ul",[e("li",[t._v("this._titleName: 私有成员")]),t._v(" "),e("li",[t._v("this.title : 在 data()中的数据")]),t._v(" "),e("li",[t._v("this.pTitleName： props 中的数据")]),t._v(" "),e("li",[t._v("this.cTitle： 计算属性")])]),t._v(" "),e("h3",{attrs:{id:"methods-的命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods-的命名","aria-hidden":"true"}},[t._v("#")]),t._v(" methods 的命名")]),t._v(" "),e("p",[t._v("可以把 methods 中的函数项分成两类：")]),t._v(" "),e("ul",[e("li",[t._v("事件响应函数:加"),e("code",[t._v("前缀h")]),t._v("。")]),t._v(" "),e("li",[t._v("其他")])]),t._v(" "),e("p",[t._v("举个例子：页面上有个按钮，点击之后获取数据，然后加工数据，给本地数据项赋值。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<template>\n<div>\n    <button @click="hClick"></button>\n</div>\n</template>\n<script>\n    methods:{\n        hClick(){\n            API.GETXXXData().then(rs=>{\n\n                this.initData(rs);\n            })\n        },\n        initData(data){\n            ....\n            return ...;\n        }\n    }\n<\/script>\n')])])]),e("h3",{attrs:{id:"methods-拆到单独的文件中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods-拆到单独的文件中","aria-hidden":"true"}},[t._v("#")]),t._v(" methods 拆到单独的文件中")]),t._v(" "),e("p",[t._v("index.vue")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import mFunc from './index.vue.js'\n\nexport default{\n    methods:{\n        ...mFunc,\n        method2:{\n            this.method1();\n        }\n    }\n}\n")])])]),e("p",[t._v("index.vue.js")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("export default {\n    method1:{}\n}\n")])])]),e("h3",{attrs:{id:"mixin-相关的命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mixin-相关的命名","aria-hidden":"true"}},[t._v("#")]),t._v(" Mixin 相关的命名")]),t._v(" "),e("h4",{attrs:{id:"文件组织"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件组织","aria-hidden":"true"}},[t._v("#")]),t._v(" 文件组织")]),t._v(" "),e("p",[t._v("尽可能把全部的 mixin 放在一个文件夹中：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n-mixin\n--mixinTable.js\n--mininBasic.js\n\n")])])]),e("h4",{attrs:{id:"mixin-文件名的命名格式为：mixin-名词-js。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mixin-文件名的命名格式为：mixin-名词-js。","aria-hidden":"true"}},[t._v("#")]),t._v(" mixin 文件名的命名格式为：mixin+名词.js。")]),t._v(" "),e("p",[t._v("如：\nmixinTable.js")]),t._v(" "),e("p",[t._v("其中所有的设置项 统一加前缀"),e("code",[t._v("mx")]),t._v("。")]),t._v(" "),e("ul",[e("li",[t._v("如果是计算属性，则前缀是"),e("code",[t._v("mxc")])]),t._v(" "),e("li",[t._v("如果是 props,则前缀是"),e("code",[t._v("mxp")]),t._v("：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('\nexport default{\nprops:{\nmxpTitleName:{type:String ,default:""}\n},\ncomputed:{\nmxcTitle(){}\n},\nmethods:{\nmxTableMethod1(){\n\n        },\n    }\n\n}\n')])])])])},[],!1,null,null,null);n.options.__file="codeformatter.md";a.default=n.exports}}]);